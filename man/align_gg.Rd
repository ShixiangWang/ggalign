% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align-gg.R
\name{align_gg}
\alias{align_gg}
\alias{ggalign}
\title{Create ggplot object}
\usage{
align_gg(
  mapping = aes(),
  size = NULL,
  action = NULL,
  data = waiver(),
  limits = TRUE,
  facet = TRUE,
  context = NULL,
  set_context = deprecated(),
  order = deprecated(),
  name = deprecated(),
  free_guides = deprecated(),
  free_spaces = deprecated(),
  plot_data = deprecated(),
  theme = deprecated(),
  free_labs = deprecated()
)
}
\arguments{
\item{mapping}{Additional default list of aesthetic mappings to use for plot.
If not specified, must be supplied in each layer added to the plot.}

\item{size}{Plot size, specified as a \code{\link[grid:unit]{unit}} object.}

\item{action}{A \code{\link[=plot_action]{plot_action()}} object used for the plot. By default,
it inherits from the parent layout.}

\item{data}{A flexible input that specifies the data to be used
\itemize{
\item \code{NULL}: No data is set.
\item \code{\link[=waiver]{waiver()}}: Uses the layout matrix.
\item A \code{function} (including purrr-like lambda syntax) that is applied to the
layout matrix, and must return a matrix. If you want to transform the final
plot data, please use \code{action} argument.
\item A \code{matrix}, \verb{data frame}, or atomic vector. If an atomic vector is
provided, it is converted into a single-column data frame.
}}

\item{limits}{Logical; determines if layout limits are set for the plot.}

\item{facet}{Logical; determines if layout facets are set for the plot. If
\code{FALSE}, \code{limits} will also be set to \code{FALSE}.}

\item{context}{A \code{\link[=plot_context]{plot_context()}} object that defines the action when
added to a layout.}

\item{set_context}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{context}
argument instead.}

\item{order}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{context} argument
instead.}

\item{name}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{context} argument
instead.}

\item{free_guides}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{action}
argument instead.}

\item{free_spaces}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{action}
argument instead.}

\item{plot_data}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{action}
argument instead.}

\item{theme}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{action} argument
instead.}

\item{free_labs}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use \code{action}
argument instead.}
}
\value{
A new \code{Align} object.
}
\description{
\code{ggalign} is an alias of \code{align_gg}.
}
\section{ggplot2 specification}{

\code{align_gg} initializes a ggplot \code{data} and \code{mapping}.

\code{align_gg()} always applies a default mapping for the axis of the data index
in the layout. This mapping is \code{aes(y = .data$.y)} for horizontal stack
layout (including left and right heatmap annotation) and \code{aes(x = .data$.x)}
for vertical stack layout (including top and bottom heatmap annotation).

For ggplot usage, matrix (including a simple vector) data is converted into a
long-format data frame. The data in the underlying \code{ggplot} object will
contain following columns:
\itemize{
\item \code{.panel}: the panel for current layout axis. It means \code{x-axis} for
vertical stack layout, \code{y-axis} for horizontal stack layout.
\item \code{.index}: the index of the original layout data (only applicable if \code{data}
is \code{NULL}).
\item \code{.x} or \code{.y}: the \code{x} or \code{y} coordinates
\item \code{.row_names} and \code{.row_index}: A factor of the row names and an integer of
row index of the original matrix or data frame.
\item \code{.column_names} and \code{.column_index}: the column names and column index of
the original matrix (only applicable if \code{data} is a \code{matrix}).
\item \code{value}: the actual matrix value  (only applicable if \code{data} is a
\code{matrix}).
}

In the case where the input data is already a data frame, three additional
columns (\code{.row_names}, \code{.row_index}, and \code{.panel}) are added to the data
frame.

If the data inherits from \code{\link[=quad_layout]{quad_layout()}}/\code{\link[=ggheatmap]{ggheatmap()}}, an additional
column will be added.
\itemize{
\item \code{.extra_panel}: the panel information for column (left or right
annotation) or row (top or bottom annotation).
}
}

\section{Aligned Axis}{

It is important to note that we consider rows as observations, meaning
\code{NROW(data)} must match the number of observations along the specified layout
axis (x-axis for a vertical stack layout, y-axis for a horizontal stack
layout).
\itemize{
\item \code{\link[=quad_layout]{quad_layout()}}/\code{\link[=ggheatmap]{ggheatmap()}}: for column annotation, the
\verb{layout matrix} will be transposed before using (If data is a function, it
will be applied with the transposed matrix). This is necessary because
column annotation uses columns as observations, but we need rows.
\item \code{\link[=stack_layout]{stack_layout()}}: the \verb{layout matrix} will be used as it is since we
place all plots along a single axis.
}
}

\examples{
ggheatmap(matrix(rnorm(81), nrow = 9)) +
    anno_top() +
    ggalign() +
    geom_point(aes(y = value))

# if data is `NULL`, a three column data frame
# will be created (`.panel`, `.index`, `.x`/`.y`)
ggheatmap(matrix(rnorm(81), nrow = 9)) +
    anno_top(size = 0.5) +
    align_dendro(k = 3L) +
    ggalign(data = NULL, size = 0.2) +
    geom_tile(aes(y = 1L, fill = .panel))

}
