% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/action.R
\name{plot_action}
\alias{plot_action}
\title{Plot Action Specifications in the Layout}
\usage{
plot_action(
  data = NA,
  theme = NA,
  guides = NA,
  free_spaces = NA,
  free_labs = NA,
  inherit = NA
)
}
\arguments{
\item{data}{A function to transform the plot data before rendering, referred
to as action data. Defaults will attempt to inherit from the parent layout if
the actual data is inherited from it, with one exception: \code{align_dendro()},
which will not inherit the action data by default. Acceptable values include:
\itemize{
\item \code{NULL}: No action taken.
\item \code{\link[ggplot2:waiver]{waiver()}}: Inherits from the parent layout.
\item A \code{function} or purrr-style \code{formula}: Used to transform the plot data,
which should accept a data frame and return a data frame. You can apply
this after the parent layout action data function, using the \code{inherit}
argument.
}

Use this hook to modify the data for all \code{geoms} after the layout is created
but before rendering by \code{ggplot2}. The returned data must be a data frame for
ggplot.}

\item{theme}{Default plot theme, one of:
\itemize{
\item \code{NULL}: inherit from the parent layout directly.
\item \code{\link[ggplot2:theme]{theme()}}: will be added with the parent layout theme.
If you want to override the parent layout theme, set \code{complete=TRUE}.
}

\strong{Note:} for \verb{align_*()} function, titles and labels in the the axes used
for alignment will always be removed by default. For vertical stack layouts,
this refers to the x-axis; for horizontal stack layouts, this refers to the
y-axis. To display these axis titles or labels, you must manually add the
appropriate \link[ggplot2:theme]{theme()} elements for these axes.}

\item{guides}{A string with one or more of \code{"t"}, \code{"l"}, \code{"b"}, and \code{"r"} indicating
which side of guide legends should be collected. Defaults to
\code{\link[ggplot2:waiver]{waiver()}}, which inherits from the parent layout. If no
parent layout, all guides will be collected. If \code{NULL}, no guides will be
collected.}

\item{free_spaces}{A string with one or more of \code{"t"}, \code{"l"}, \code{"b"}, and \code{"r"}
indicating which border spaces should be removed. Defaults to
\code{\link[ggplot2:waiver]{waiver()}}, which inherits from the parent layout. If no
parent, the default is \code{NULL}, meaning no spaces are removed.

Usually you want to apply this with the whole layout, instead of individual
plots.}

\item{free_labs}{A string with one or more of \code{"t"}, \code{"l"}, \code{"b"}, and \code{"r"}
indicating which axis titles should be free from alignment. Defaults to
\code{\link[ggplot2:waiver]{waiver()}}, which inherits from the parent layout. If no
parent layout, no axis titles will be aligned. If \code{NULL}, all axis titles
will be aligned.}

\item{inherit}{A single boolean value indicates whether to apply the parent
action \code{data} first and then apply the specified action \code{data}. Defaults to
\code{FALSE}.}
}
\value{
A \code{plot_action} object.
}
\description{
The \code{plot_action()} function defines the behavior of plots within a layout.
It can be used in the \code{action} argument of layout functions like
\code{\link[=quad_switch]{quad_switch()}} or \code{\link[=stack_switch]{stack_switch()}} to set global actions for all plots
in the layout. Additionally, \code{plot_action()} can be applied directly to
specific plots through the \code{action} argument in the \verb{align_*()}/\code{ggfree()}
functions, or it can be added directly to a plot.
}
\examples{
# used in the layout, define the default action for all plots in the layout
ggheatmap(matrix(rnorm(72), nrow = 8),
    action = plot_action(
        theme = theme(plot.background = element_rect(fill = "red"))
    )
)

# You can also add it for a single plot
ggheatmap(matrix(rnorm(72), nrow = 8),
    action = plot_action(
        theme = theme(plot.background = element_rect(fill = "red"))
    )
) + plot_action( # here, we modify the plot action for the heatmap body
    theme = theme(plot.background = element_rect(fill = "blue"))
)

}
