% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layout-.R, R/layout-quad-.R, R/layout-stack-.R
\name{layout-operator}
\alias{layout-operator}
\alias{Ops,QuadLayout,ANY-method}
\alias{+.QuadLayout}
\alias{&.QuadLayout}
\alias{-.QuadLayout}
\alias{+.HeatmapLayout}
\alias{&.HeatmapLayout}
\alias{-.HeatmapLayout}
\alias{+.ggheatmap}
\alias{&.ggheatmap}
\alias{-.ggheatmap}
\alias{+.ggside}
\alias{&.ggside}
\alias{-.ggside}
\alias{Ops,StackLayout,ANY-method}
\alias{+.StackLayout}
\alias{&.StackLayout}
\alias{-.StackLayout}
\title{Layout operator}
\usage{
\S4method{Ops}{QuadLayout,ANY}(e1, e2)

\S4method{Ops}{StackLayout,ANY}(e1, e2)
}
\arguments{
\item{e1}{A \code{\link[=quad_layout]{quad_layout()}}/\code{\link[=ggheatmap]{ggheatmap()}} or \code{\link[=stack_layout]{stack_layout()}} object.}

\item{e2}{An object to be added to the plot.}
}
\value{
A modified \code{Layout} object.
}
\description{
\itemize{
\item \code{+}: adds elements to the active plot in the active layout.
\item \code{&}: applies elements to all plots in the layout.
\item \code{-}:
\itemize{
\item \code{quad_layout()}: Adds elements to all plots in the active layout, as
well as to any nested layouts within it.
\item \code{stack_layout()}:
}
}
}
\details{
In order to reduce code repetition \code{ggalign} provides two operators for
adding ggplot elements (geoms, themes, facets, etc.) to multiple/all plots in
\code{\link[=quad_layout]{quad_layout()}}/\code{\link[=ggheatmap]{ggheatmap()}} or \code{\link[=stack_layout]{stack_layout()}} object: \code{-} and \code{&}.

Like \code{patchwork}, \code{&} add the element to all plots in the layout. If the
element is a \link[ggplot2:theme]{theme}, this will also modify the layout
theme.

The key difference between \code{&} and \code{-} is in how they behave in
\code{\link[=quad_layout]{quad_layout()}}. The \code{-} operator only applies the element to the current
active context in \code{\link[=quad_layout]{quad_layout()}}, if no active context, it will apply to
all plots in the \code{\link[=quad_layout]{quad_layout()}}. Using \code{-} might seem unintuitive if you
think of the operator as "subtract", the underlying reason is that \code{-} is the
only operator in the same precedence group as \code{+}.
}
\examples{
mat <- matrix(rnorm(56), nrow = 7)
ggheatmap(mat) +
    hmanno("t") +
    ggalign() +
    geom_point(aes(y = value))

ggheatmap(mat) +
    anno_top() +
    align_dendro() &
    theme(panel.border = element_rect(
        colour = "red", fill = NA, linewidth = unit(2, "mm")
    ))
ggheatmap(mat) +
    anno_top() +
    align_dendro() -
    theme(panel.border = element_rect(
        colour = "red", fill = NA, linewidth = unit(2, "mm")
    ))

# used in the layout, define the default action for all plots in the layout
ggheatmap(matrix(rnorm(72), nrow = 8)) -
    theme(plot.background = element_rect(fill = "red"))

# You can also add it for a single plot
ggheatmap(matrix(rnorm(72), nrow = 8)) -
    theme(plot.background = element_rect(fill = "red")) +
    # here, we modify the plot action for the heatmap body
    theme(plot.background = element_rect(fill = "blue"))
}
